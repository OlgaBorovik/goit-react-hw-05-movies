{"version":3,"file":"static/js/43.402ce315.chunk.js","mappings":"2RAKaA,EAAqBC,EAAAA,GAAAA,IAAH,0BAGlBC,EAAOD,EAAAA,GAAAA,IAAH,wCAIJE,EAAQF,EAAAA,GAAAA,GAAH,+DAILG,EAAQH,EAAAA,GAAAA,IAAH,6CAILI,GAAOJ,EAAAA,EAAAA,IAAOK,EAAAA,GAAPL,CAAH,+FAQJM,EAAeN,EAAAA,GAAAA,IAAH,iE,SCxBZO,EAAY,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAClBC,GAAWC,EAAAA,EAAAA,MACTC,EAAyEH,EAAzEG,MAAOC,EAAkEJ,EAAlEI,KAAMC,EAA4DL,EAA5DK,YAAaC,EAA+CN,EAA/CM,SAAUC,EAAqCP,EAArCO,aAAcC,EAAuBR,EAAvBQ,QAA1D,EAAiFR,EAAdS,OAAAA,OAAnE,MAA0E,GAA1E,EACMC,EAAYC,KAAKC,MAAqB,GAAfL,GAE7B,OACI,UAAChB,EAAD,YACI,UAACG,EAAD,WAAQS,EAAR,IAAgBC,MAChB,UAACX,EAAD,YACI,SAACE,EAAD,CAAOkB,IAAG,0CAAqCR,GAAeS,IAAKN,KACnE,4BACI,wCAAgBE,EAAhB,SACA,sCACA,uBAAIJ,KACJ,oCACA,uBAAIG,EAAOM,KAAI,SAAAC,GAAK,OAAIA,EAAMZ,IAAV,IAAgBa,KAAK,eAOjD,oDACA,SAACrB,EAAD,CAAMsB,GAAE,OAAUC,MAAOlB,EAASkB,MAAlC,mBACA,SAACvB,EAAD,CAAMsB,GAAE,UAAaC,MAAOlB,EAASkB,MAArC,uBAGX,ECgBD,EAxCqB,WAAO,IAAD,IAChBC,GAAWC,EAAAA,EAAAA,MAAXD,QACP,GAA0BE,EAAAA,EAAAA,UAAS,CAAC,GAApC,eAAOtB,EAAP,KAAcuB,EAAd,KACA,GAA0BD,EAAAA,EAAAA,UAAS,MAAnC,eAAOE,EAAP,KAAcC,EAAd,KACMxB,GAAWC,EAAAA,EAAAA,OAGjBwB,EAAAA,EAAAA,YAAU,WAEN,IAAMC,EAAa,IAAIC,gBAFX,wCAGZ,8GAE+BC,EAAAA,EAAAA,IAAeT,EAAS,CAAEU,OAAQH,EAAWG,SAF5E,OAEcC,EAFd,OAGQC,QAAQC,IAAIF,GACZR,EAASQ,GAJjB,gDAQQC,QAAQC,IAAI,KAAMC,SAClBT,EAAS,EAAD,IAThB,0DAHY,sBAgBZ,OAhBY,mCAeZU,GACO,WAAQR,EAAWS,OAAS,CAEtC,GAAE,CAAChB,IAIJ,IAAMiB,EAAY,oBAAGpC,EAASkB,aAAZ,aAAG,EAAgBmB,YAAnB,QAA2B,IAC7C,OACI,4BACI,SAAC1C,EAAD,CAAMsB,GAAImB,EAAV,qBACCb,IAAS,SAAC1B,EAAD,yCACR0B,GAASxB,IAAS,SAACD,EAAD,CAAWC,MAAOA,KACtC,SAAC,KAAD,MAGX,C","sources":["components/MovieCard/MovieCard.styled.jsx","components/MovieCard/MovieCard.jsx","pages/MovieDetails.jsx"],"sourcesContent":["import styled from 'styled-components';\n\n\nimport { NavLink } from 'react-router-dom';\n\nexport const MovieCardContainer = styled.div`\n\n`\nexport const Card = styled.div`\ndisplay: flex;\n`\n\nexport const Title = styled.h1`\ntext-align: center;\nfont-size: 42px;\n`\nexport const Image = styled.img`\nmargin-right: 16px;\n`\n\nexport const Link = styled(NavLink)`\nfont-size: 20px;\nmargin-left: 20px;\n&:hover{\n    color: tomato;\n}\n`\n\nexport const Notification = styled.div`\n\nfont-size: 28px;\nmargin-top: 24px;\n\n`","// import { Container } from \"components/Container/Container\"\nimport { useLocation } from \"react-router-dom\"\nimport {Title, MovieCardContainer, Card, Image, Link} from './MovieCard.styled'\n\nexport const MovieCard = ({ movie }) => {\n    const location = useLocation()\n    const { title, name, poster_path, overview, vote_average, tagline, genres=[] } = movie\n    const userScore = Math.round(vote_average * 10)\n\n    return(\n        <MovieCardContainer>\n            <Title>{title} {name}</Title>\n            <Card>\n                <Image src={`https://image.tmdb.org/t/p/w300/${poster_path}`} alt={tagline} />\n                <div>\n                    <p>User score: {userScore} %</p>\n                    <h2>Overview</h2>\n                    <p>{overview}</p>\n                    <h2>Genres</h2>\n                    <p>{genres.map(genre => genre.name).join(', ')}</p>\n                </div>\n                \n            </Card>\n            \n\n            \n            <h2>Additional information</h2>\n            <Link to={`cast`} state={location.state}>Cast</Link>\n            <Link to={`reviews`} state={location.state}>Reviews</Link>\n        </MovieCardContainer>\n    )\n}","import { useEffect } from \"react\"\nimport { useState } from \"react\"\nimport { Outlet, useParams, useLocation } from \"react-router-dom\"\nimport { fetchMovieById } from \"../components/api\"\nimport { MovieCard } from '../components/MovieCard/MovieCard'\nimport { Link, Notification } from \"../components/MovieCard/MovieCard.styled\"\n\nconst MovieDetails = () => {\n    const {movieId} = useParams()\n    const [movie, setMovie] = useState({})  \n    const [error, serError] = useState(null)\n    const location = useLocation()\n\n\n    useEffect(() => {\n        \n        const controller = new AbortController()\n        async function fetchMovieDetails() {\n            try {\n                const response = await fetchMovieById(movieId, { signal: controller.signal, })\n                console.log(response)\n                setMovie(response)\n                \n            }\n            catch (error) {\n                console.log(error.message)\n                serError(error)\n            }\n        }\n        fetchMovieDetails()\n        return () => { controller.abort() }\n        \n    }, [movieId])\n    \n    \n    \n    const backLinkHref = location.state?.from ?? '/'\n    return (\n        <div>\n            <Link to={backLinkHref}>Go back</Link>\n            {error && <Notification>Sorry, the page not found</Notification>}\n            {!error && movie && <MovieCard movie={movie} />}\n            <Outlet />\n            </div>\n    )\n}\n\nexport default MovieDetails\n"],"names":["MovieCardContainer","styled","Card","Title","Image","Link","NavLink","Notification","MovieCard","movie","location","useLocation","title","name","poster_path","overview","vote_average","tagline","genres","userScore","Math","round","src","alt","map","genre","join","to","state","movieId","useParams","useState","setMovie","error","serError","useEffect","controller","AbortController","fetchMovieById","signal","response","console","log","message","fetchMovieDetails","abort","backLinkHref","from"],"sourceRoot":""}