{"version":3,"file":"static/js/991.16c74e1f.chunk.js","mappings":"uSAGaA,EAAOC,EAAAA,GAAAA,GAAH,yMAYJC,EAAOD,EAAAA,GAAAA,GAAH,8aAiBJE,EAAQF,EAAAA,GAAAA,GAAH,sFAMLG,EAAQH,EAAAA,GAAAA,IAAH,sDAKLI,EAAOJ,EAAAA,GAAAA,EAAH,+D,sGCvCV,SAASK,EAAT,GAAqC,IAAfC,EAAc,EAAdA,WACnBC,GAAWC,EAAAA,EAAAA,MACjB,OACI,SAAC,IAAD,WACA,SAAC,KAAD,UAEQF,EAAWG,KAAI,gBAAEC,EAAF,EAAEA,GAAIC,EAAN,EAAMA,MAAOC,EAAb,EAAaA,KAAMC,EAAnB,EAAmBA,YAAnB,OACX,SAAC,KAAD,WACI,UAAC,KAAD,CAAMC,GAAE,kBAAaJ,GAAMK,MAAO,CAACC,KAAMT,GAAzC,WACI,SAAC,KAAD,CAAOU,IAAG,0CAAqCJ,GAAeK,IAAI,MAClE,UAAC,KAAD,WAAOP,EAAP,IAAeC,SAHZF,EADA,OAe9B,C,gKCvBYS,EAAqBnB,EAAAA,GAAAA,IAAH,kEAKlBoB,EAAOpB,EAAAA,GAAAA,KAAH,8CAIJqB,EAAQrB,EAAAA,GAAAA,MAAH,oHAQLsB,EAAStB,EAAAA,GAAAA,OAAH,sN,SC0BnB,EAzCkB,SAAC,GAAgB,IAAfuB,EAAc,EAAdA,SAChB,GAAyBC,EAAAA,EAAAA,UAAS,IAAlC,eAAMC,EAAN,KAAaC,EAAb,KAmBI,OACI,SAACP,EAAD,WAEQ,UAACC,EAAD,CAAMG,SAfD,SAACI,GAClBA,EAAEC,iBAEmB,KAAjBH,EAAMI,QAIVN,EAASE,GACTC,EAAS,KAJLI,MAAM,yIAMb,EAKe,WACI,SAACT,EAAD,CACAU,KAAK,OACLC,aAAa,MACbC,WAAS,EACLC,YAAY,eACZC,MAAOV,EACPW,SA3BF,SAACT,GACnB,IAAMQ,EAASR,EAAEU,cAAXF,MACNT,EAASS,EACZ,KA2Be,SAACb,EAAD,CAAQS,KAAK,SAAb,wBAMnB,E,mCCQD,EA5Ce,WAAO,IAAD,EACjB,GAA4BP,EAAAA,EAAAA,UAAS,IAArC,eAAOc,EAAP,KAAeC,EAAf,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMjB,EAAK,UAAGgB,EAAaE,IAAI,gBAApB,QAAgC,GAE3CC,QAAQC,IAAIpB,GA8BZ,OAvBAqB,EAAAA,EAAAA,YAAU,WACN,GAAc,KAAVrB,EAAJ,CAIA,IAAMsB,EAAa,IAAIC,gBAevB,OApBY,mCAmBZC,GACO,WAAQF,EAAWG,OAAS,CAjBlC,CAHW,wCAOR,8GAE2BC,EAAAA,EAAAA,IAAkB1B,EAAQ,CAAE2B,OAAQL,EAAWK,SAF1E,OAGyC,KAD/BC,EAFV,QAGiBC,KAAKC,QAAQC,QACtB1B,MAAM,4CAEVS,GAAU,OAAIc,EAASC,KAAKC,UANhC,gDASIX,QAAQC,IAAI,KAAMY,SATtB,0DAPQ,sBAqBX,GAAE,CAAChC,KAGJ,UAACiC,EAAA,EAAD,YACI,SAAC,EAAD,CAAWnC,SA9BM,SAAAE,GACrBc,EAAU,IACVG,EAA0B,KAAVjB,EAAe,CAAEA,MAAOA,GAAU,GACrD,IA4BQa,IAAU,SAACjC,EAAA,EAAD,CAAYC,WAAYgC,KACnC,SAAC,KAAD,MAGX,C","sources":["components/MovieList/MovieList.styled.jsx","components/MovieList/MoviesList.jsx","components/SearchBar/SearchBar.styled.jsx","components/SearchBar/SearchBar.jsx","pages/Movies.jsx"],"sourcesContent":["import styled from 'styled-components';\n\n\nexport const List = styled.ul`\ndisplay: flex;\nflex-wrap: wrap;\nmargin-left: -30px;\nmargin-bottom: -30px;\n  margin-top: 0;\n  padding: 0;\n  list-style: none;\n  margin-left: auto;\n  margin-right: auto;\n` \n\nexport const Item = styled.li`\n        display: block;\n        width: 300;\n        margin-left: 30px;\n        margin-bottom: 40px;\n        height: 500px;\n        border-radius: 4px;\n        border: 1px solid #AFB1B8;\n        transition-property: border;\n        transition-duration: 250ms;\n        transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);\n\n        &:hover {\n            border: 1px solid tomato;\n        }\n`\n\nexport const Title = styled.h1`\nmargin-left: auto;\nmargin-right: auto;\ntext-align: center;\n`\n\nexport const Image = styled.img`\nwidth: 100%;\nheight: 450px;\n`\n\nexport const Text = styled.p`\ntext-align: center;\nmargin-top: 20px;\n`\n","import { Link, useLocation } from \"react-router-dom\"\nimport { List, Item, Image, Text } from \"./MovieList.styled\"\nimport {Container} from \"../Container/Container\"\n\nexport function MoviesList({ moviesList }) {\n    const location = useLocation()\n    return (\n        <Container>\n        <List>\n            {\n                moviesList.map(({id, title, name, poster_path}) =>\n                    <Item key={id}>\n                        <Link to={`/movies/${id}`} state={{from: location}}>\n                            <Image src={`https://image.tmdb.org/t/p/w300/${poster_path}`} alt=\"\"></Image>\n                            <Text>{title} {name}</Text>\n                            \n                            \n                        </Link>\n                    </Item>\n                )\n            }\n        </List >  \n        </Container>\n        \n    )\n}","import styled from 'styled-components';\n\nexport const SearchBarContainer = styled.div`\ndisplay: flex;\njustify-content: center;\n`\n\nexport const Form = styled.form`\nmargin-bottom: 20px;\n`\n\nexport const Input = styled.input`\nwidth: 250px;\nheight: 25px;\nmargin-right: 30px;\nmargin-left: auto;\nborder-radius: 4px;\n`\n\nexport const Button = styled.button`\nwidth: 100px;\nheight: 30px;\nfont-size: 16px;\nbackground-color: white;\nborder-color: tomato;\nborder-radius: 4px;\n&:hover\n&:focus{\n    background-color: tomato;\n    color: white;\n}\n`","import { useState } from \"react\"\nimport { Input, Button, Form, SearchBarContainer} from \"./SearchBar.styled\"\n\n\nconst Searchbar = ({onSubmit}) => {\n    const[query, setQuery] = useState('')\n\n    const onInputChange = (e) => {\n        const{value} = e.currentTarget\n        setQuery(value)\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault()\n\n        if (query.trim() === '') {\n            alert('Введите поисковый запрос')\n            return\n        }\n        onSubmit(query)\n        setQuery('')\n\n    }\n    \n        return (\n            <SearchBarContainer>\n                {/* <SearchbarHeader> */}\n                    <Form onSubmit={handleSubmit}>\n                        <Input\n                        type=\"text\"\n                        autoComplete=\"off\"\n                        autoFocus\n                            placeholder=\"Search movie\"\n                            value={query}\n                            onChange={onInputChange}\n                        \n                    />\n                    <Button type=\"submit\">Search</Button>\n                    </Form>\n                {/* </SearchbarHeader> */}\n            </SearchBarContainer>\n        )\n    \n}\n\nexport default Searchbar","import { useEffect, useState } from \"react\"\nimport { fetchSearchMovie } from \"../components/api\"\nimport Searchbar from \"../components/SearchBar/SearchBar\"\nimport { Outlet, useSearchParams } from \"react-router-dom\"\nimport { MoviesList } from \"../components/MovieList/MoviesList\"\nimport { Container } from \"../components/Container/Container\"\n\nconst Movies = () => {\n    const [movies, setMovies] = useState([])\n    const [searchParams, setSearchParams] = useSearchParams();\n    const query = searchParams.get('query') ?? \"\"\n    \n    console.log(query)\n    \n    const handleFormSubmit = query => {\n        setMovies([])\n        setSearchParams(query !== '' ? { query: query } : '')\n    }\n    \n    useEffect(() => {\n        if (query === '') {\n            return\n        } \n        \n        const controller = new AbortController()\n        \n            async function searchMovie() {\n            try {\n                const response = await fetchSearchMovie((query), { signal: controller.signal, })\n                if (response.data.results.length === 0) {\n                    alert('Sorry, film not found. Please, try again')\n                }\n                setMovies([...response.data.results])\n            }\n            catch (error) {\n                console.log(error.message)\n            }\n        }\n        searchMovie()\n        return () => { controller.abort() }\n        }, [query])\n\n    return (\n        <Container>\n            <Searchbar onSubmit={handleFormSubmit}  />\n            {movies && <MoviesList moviesList={movies} /> }\n            <Outlet/>\n        </Container>\n    )\n}\n\nexport default Movies"],"names":["List","styled","Item","Title","Image","Text","MoviesList","moviesList","location","useLocation","map","id","title","name","poster_path","to","state","from","src","alt","SearchBarContainer","Form","Input","Button","onSubmit","useState","query","setQuery","e","preventDefault","trim","alert","type","autoComplete","autoFocus","placeholder","value","onChange","currentTarget","movies","setMovies","useSearchParams","searchParams","setSearchParams","get","console","log","useEffect","controller","AbortController","searchMovie","abort","fetchSearchMovie","signal","response","data","results","length","message","Container"],"sourceRoot":""}